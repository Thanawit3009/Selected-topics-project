import React, { useState, useEffect } from 'react';
import Navbar from './Navbar';
import './PublicCollectionsPage.css';
import { useSearchParams, useNavigate } from 'react-router-dom'; // ‡πÉ‡∏ä‡πâ useNavigate ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤

const PublicCollectionsPage = () => {
  const isLoggedIn = !!localStorage.getItem('token');
  const navigate = useNavigate();
  const [collections, setCollections] = useState([]);
  const [filteredCollections, setFilteredCollections] = useState([]);
  const [searchParams] = useSearchParams(); // ‡∏î‡∏∂‡∏á‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏à‡∏≤‡∏Å URL

  const fetchPublicCollections = async () => {
    try {
      const headers = {
        Accept: "application/json",
      };

      const token = localStorage.getItem('token');
      if (token) {
        headers.Authorization = `Bearer ${token}`;
      }

      const response = await fetch("http://localhost:8000/api/mycollections/collections/shared/", { headers });

      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }

      let data = await response.json();

      // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏™‡∏∏‡∏î
      data = data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));

      setCollections(data);
    } catch (error) {
      console.error("Error fetching shared collections:", error);
    }
  };


  useEffect(() => {
    fetchPublicCollections();
  }, []);

  useEffect(() => {
    const query = searchParams.get('search') || ''; // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ `search` ‡∏à‡∏≤‡∏Å URL
    const results = collections
      .filter((collection) =>
        collection.name.toLowerCase().includes(query.toLowerCase())
      )
      .sort((a, b) => new Date(b.created_at) - new Date(a.created_at)); // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤

    setFilteredCollections(results);
  }, [searchParams, collections]);


  const handleProfileClick = (userId) => {
    const currentUserId = localStorage.getItem('user_id'); // ‡∏î‡∏∂‡∏á user_id ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å localStorage
    console.log("Navigating to profile of user ID:", userId); 
  
    if (!isLoggedIn) {
      navigate('/login'); // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ Login
      return;
    }
  
    if (userId && userId.toString() === currentUserId) {
      navigate('/profile'); // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ /profile
    } else {
      navigate(`/member/${userId}`); // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏ó‡∏µ‡πà /member/{userId}
    }
  };
  
  
  const logout = () => {
    localStorage.removeItem('token');
    localStorage.removeItem('refresh_token');
    window.location.reload();
  };

  return (
    <div className="public-collections-page">
      <Navbar isLoggedIn={isLoggedIn} onLogout={logout} />
      <h1>‡∏Ñ‡∏≠‡∏•‡πÄ‡∏•‡πá‡∏Å‡∏ä‡∏±‡πà‡∏ô</h1>
      <div className="collections-list">
        {filteredCollections.length > 0 ? (
          filteredCollections.map((collection) => {
            console.log("User Data:", collection.user); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á user
            console.log("Profile Image URL:", collection.user.profile_picture); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö URL ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ

            return (
              <div key={collection.id} className="collection-card">
                <div className="collection-header">
                  {/* üîπ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ */}
                  <div
                    className="collection-profile"
                    onClick={() => handleProfileClick(collection.user.id)} // ‚úÖ ‡πÉ‡∏ä‡πâ collection.user.id
                    style={{ cursor: 'pointer', display: 'flex', alignItems: 'center' }}
                  >
                    <img
                      src={collection.user.profile_picture || "/profileicon.png"}
                      alt="Profile"
                      className="collection-profile-image"
                      onError={(e) => { e.target.src = "/profileicon.png"; }}
                      style={{ width: '40px', height: '40px', borderRadius: '50%', marginRight: '10px' }}
                    />
                    <span className="collection-user-name">
                      {collection.user.first_name || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} {collection.user.last_name || ''}
                    </span>
                  </div>

                </div>
                <h2>{collection.name || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡πÄ‡∏•‡πá‡∏Å‡∏ä‡∏±‡πà‡∏ô'}</h2>
                <p>{collection.description || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢'}</p>
                {collection.image && (
                  <img
                    src={collection.image}
                    alt={collection.name || '‡∏Ñ‡∏≠‡∏•‡πÄ‡∏•‡πá‡∏Å‡∏ä‡∏±‡πà‡∏ô'}
                    className="collection-image"
                  />
                )}
              </div>
            );
          })
        ) : (
          <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡πÄ‡∏•‡πá‡∏Å‡∏ä‡∏±‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</p>
        )}
      </div>
    </div>
  );

};

export default PublicCollectionsPage;
